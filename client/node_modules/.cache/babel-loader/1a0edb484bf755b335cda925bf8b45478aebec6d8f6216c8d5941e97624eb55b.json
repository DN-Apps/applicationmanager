{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Applicationmanager\\\\client\\\\src\\\\pages\\\\Applications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getApplications, getAppConfig } from '../api';\nimport './Applications.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Applications() {\n  _s();\n  const [apps, setApps] = useState([]);\n  const [selectedApp, setSelectedApp] = useState(null);\n  const [configData, setConfigData] = useState({\n    columns: [],\n    rows: []\n  });\n  const [selectedTab, setSelectedTab] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    loadApplications();\n  }, []);\n  const loadApplications = async () => {\n    try {\n      const {\n        data\n      } = await getApplications();\n      setApps(data);\n    } catch (err) {\n      console.error('Fehler beim Laden der Anwendungen:', err);\n    }\n  };\n  const handleAppClick = async app => {\n    setSelectedApp(app);\n    setLoading(true);\n    setSelectedTab(null);\n    try {\n      const response = await getAppConfig(app.key);\n      const {\n        columns,\n        rows\n      } = response.data;\n      setConfigData({\n        columns,\n        rows\n      });\n\n      // Erste config_key als Tab wählen, falls vorhanden\n      const keys = rows.map(r => r.config_key).filter(Boolean);\n      if (keys.length > 0) {\n        setSelectedTab(keys[0]);\n      }\n    } catch (err) {\n      console.error('Fehler beim Laden der Konfiguration:', err);\n      setConfigData({\n        columns: [],\n        rows: []\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSave = async row => {\n    const isNew = !row.id;\n    const method = isNew ? 'POST' : 'PUT';\n    const url = isNew ? `/api/applications/${selectedApp.key}/config` : `/api/applications/${selectedApp.key}/config/${row.id}`;\n    try {\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(row)\n      });\n      if (!response.ok) throw new Error('Fehler beim Speichern');\n      const result = await response.json();\n      setConfigData(prev => {\n        const updatedRows = isNew ? [...prev.rows, {\n          ...row,\n          id: result.id\n        }] : prev.rows.map(r => r.id === row.id ? row : r);\n        return {\n          ...prev,\n          rows: updatedRows\n        };\n      });\n    } catch (err) {\n      console.error('Fehler beim Speichern:', err);\n    }\n  };\n  const handleAdd = () => {\n    if (!selectedTab) {\n      alert(\"Bitte zuerst einen Tab auswählen, um dort einen Eintrag hinzuzufügen.\");\n      return;\n    }\n    const newRow = {\n      config_key: selectedTab\n    };\n    configData.columns.forEach(col => {\n      if (col !== 'id' && col !== 'config_key') newRow[col] = '';\n    });\n    setConfigData(prev => ({\n      ...prev,\n      rows: [...prev.rows, {\n        ...newRow,\n        id: null\n      }]\n    }));\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Diesen Eintrag wirklich löschen?')) return;\n    try {\n      await fetch(`/api/applications/${selectedApp.key}/config/${id}`, {\n        method: 'DELETE'\n      });\n      setConfigData(prev => ({\n        ...prev,\n        rows: prev.rows.filter(row => row.id !== id)\n      }));\n    } catch (err) {\n      console.error('Fehler beim Löschen:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Anwendungen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), apps.map(app => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `app-btn ${(selectedApp === null || selectedApp === void 0 ? void 0 : selectedApp.key) === app.key ? 'active' : ''}`,\n        onClick: () => handleAppClick(app),\n        children: app.name\n      }, app.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lade Konfiguration...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }, this), !loading && selectedApp && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selectedApp.name, \" \\u2013 Konfiguration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [...new Set(configData.rows.map(row => row.config_key))].map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-btn ${selectedTab === key ? 'active' : ''}`,\n            onClick: () => setSelectedTab(key),\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAdd,\n          children: \"\\u2795 Neuer Eintrag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-details\",\n          children: configData.rows.filter(row => row.config_key === selectedTab || selectedTab === null).map((conf, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-entry\",\n            children: [Object.entries(conf).map(([key, value]) => key === 'id' ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [key, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 53\n              }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: value || '',\n                onChange: e => {\n                  const val = e.target.value;\n                  setConfigData(prev => {\n                    const updatedRows = [...prev.rows];\n                    updatedRows[index] = {\n                      ...updatedRows[index],\n                      [key]: val\n                    };\n                    return {\n                      ...prev,\n                      rows: updatedRows\n                    };\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 53\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 49\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(conf),\n              children: \"\\uD83D\\uDCBE Speichern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 41\n            }, this), conf.id && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(conf.id),\n              children: \"\\uD83D\\uDDD1\\uFE0F L\\xF6schen\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 45\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n_s(Applications, \"3agoaxwdx1wgK2SC0s9nXupOWNE=\");\n_c = Applications;\nvar _c;\n$RefreshReg$(_c, \"Applications\");","map":{"version":3,"names":["React","useState","useEffect","getApplications","getAppConfig","jsxDEV","_jsxDEV","Fragment","_Fragment","Applications","_s","apps","setApps","selectedApp","setSelectedApp","configData","setConfigData","columns","rows","selectedTab","setSelectedTab","loading","setLoading","loadApplications","data","err","console","error","handleAppClick","app","response","key","keys","map","r","config_key","filter","Boolean","length","handleSave","row","isNew","id","method","url","fetch","headers","body","JSON","stringify","ok","Error","result","json","prev","updatedRows","handleAdd","alert","newRow","forEach","col","handleDelete","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","Set","conf","index","Object","entries","value","type","onChange","e","val","target","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/Desktop/Applicationmanager/client/src/pages/Applications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getApplications, getAppConfig } from '../api';\r\nimport './Applications.css';\r\n\r\nexport default function Applications() {\r\n    const [apps, setApps] = useState([]);\r\n    const [selectedApp, setSelectedApp] = useState(null);\r\n    const [configData, setConfigData] = useState({ columns: [], rows: [] });\r\n    const [selectedTab, setSelectedTab] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        loadApplications();\r\n    }, []);\r\n\r\n    const loadApplications = async () => {\r\n        try {\r\n            const { data } = await getApplications();\r\n            setApps(data);\r\n        } catch (err) {\r\n            console.error('Fehler beim Laden der Anwendungen:', err);\r\n        }\r\n    };\r\n\r\n    const handleAppClick = async (app) => {\r\n        setSelectedApp(app);\r\n        setLoading(true);\r\n        setSelectedTab(null);\r\n        try {\r\n            const response = await getAppConfig(app.key);\r\n            const { columns, rows } = response.data;\r\n            setConfigData({ columns, rows });\r\n\r\n            // Erste config_key als Tab wählen, falls vorhanden\r\n            const keys = rows.map(r => r.config_key).filter(Boolean);\r\n            if (keys.length > 0) {\r\n                setSelectedTab(keys[0]);\r\n            }\r\n        } catch (err) {\r\n            console.error('Fehler beim Laden der Konfiguration:', err);\r\n            setConfigData({ columns: [], rows: [] });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSave = async (row) => {\r\n        const isNew = !row.id;\r\n\r\n        const method = isNew ? 'POST' : 'PUT';\r\n        const url = isNew\r\n            ? `/api/applications/${selectedApp.key}/config`\r\n            : `/api/applications/${selectedApp.key}/config/${row.id}`;\r\n\r\n\r\n        try {\r\n            const response = await fetch(url, {\r\n                method,\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify(row)\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Fehler beim Speichern');\r\n\r\n            const result = await response.json();\r\n\r\n            setConfigData(prev => {\r\n                const updatedRows = isNew\r\n                    ? [...prev.rows, { ...row, id: result.id }]\r\n                    : prev.rows.map(r => (r.id === row.id ? row : r));\r\n\r\n                return { ...prev, rows: updatedRows };\r\n            });\r\n        } catch (err) {\r\n            console.error('Fehler beim Speichern:', err);\r\n        }\r\n    };\r\n\r\n    const handleAdd = () => {\r\n        if (!selectedTab) {\r\n            alert(\"Bitte zuerst einen Tab auswählen, um dort einen Eintrag hinzuzufügen.\");\r\n            return;\r\n        }\r\n\r\n        const newRow = { config_key: selectedTab };\r\n        configData.columns.forEach(col => {\r\n            if (col !== 'id' && col !== 'config_key') newRow[col] = '';\r\n        });\r\n\r\n        setConfigData(prev => ({\r\n            ...prev,\r\n            rows: [...prev.rows, { ...newRow, id: null }]\r\n        }));\r\n    };\r\n\r\n\r\n    const handleDelete = async (id) => {\r\n        if (!window.confirm('Diesen Eintrag wirklich löschen?')) return;\r\n        try {\r\n            await fetch(`/api/applications/${selectedApp.key}/config/${id}`, {\r\n                method: 'DELETE'\r\n            });\r\n            setConfigData(prev => ({\r\n                ...prev,\r\n                rows: prev.rows.filter(row => row.id !== id)\r\n            }));\r\n        } catch (err) {\r\n            console.error('Fehler beim Löschen:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"applications-container\">\r\n            <div className=\"sidebar\">\r\n                <h3>Anwendungen</h3>\r\n                {apps.map(app => (\r\n                    <button\r\n                        key={app.id}\r\n                        className={`app-btn ${selectedApp?.key === app.key ? 'active' : ''}`}\r\n                        onClick={() => handleAppClick(app)}\r\n                    >\r\n                        {app.name}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"main\">\r\n                {loading && <p>Lade Konfiguration...</p>}\r\n\r\n                {!loading && selectedApp && (\r\n                    <>\r\n                        <h2>{selectedApp.name} – Konfiguration</h2>\r\n                        <div className=\"tabs\">\r\n                            {[...new Set(configData.rows.map(row => row.config_key))].map(key => (\r\n                                <button\r\n                                    key={key}\r\n                                    className={`tab-btn ${selectedTab === key ? 'active' : ''}`}\r\n                                    onClick={() => setSelectedTab(key)}\r\n                                >\r\n                                    {key}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                        <button onClick={handleAdd}>➕ Neuer Eintrag</button>\r\n\r\n                        <div className=\"config-details\">\r\n                            {configData.rows\r\n                                .filter(row => row.config_key === selectedTab || selectedTab === null)\r\n                                .map((conf, index) => (\r\n                                    <div key={index} className=\"config-entry\">\r\n                                        {Object.entries(conf).map(([key, value]) =>\r\n                                            key === 'id' ? null : (\r\n                                                <div key={key}>\r\n                                                    <strong>{key}:</strong>{' '}\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={value || ''}\r\n                                                        onChange={(e) => {\r\n                                                            const val = e.target.value;\r\n                                                            setConfigData(prev => {\r\n                                                                const updatedRows = [...prev.rows];\r\n                                                                updatedRows[index] = { ...updatedRows[index], [key]: val };\r\n                                                                return { ...prev, rows: updatedRows };\r\n                                                            });\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            )\r\n                                        )}\r\n                                        <button onClick={() => handleSave(conf)}>💾 Speichern</button>\r\n                                        {conf.id && (\r\n                                            <button onClick={() => handleDelete(conf.id)}>🗑️ Löschen</button>\r\n                                        )}\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}