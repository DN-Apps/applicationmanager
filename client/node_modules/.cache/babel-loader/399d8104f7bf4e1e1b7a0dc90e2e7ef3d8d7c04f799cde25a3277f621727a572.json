{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniel\\\\Desktop\\\\Applicationmanager\\\\client\\\\src\\\\pages\\\\Applications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getApplications, getAppConfig } from '../api';\nimport './Applications.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Applications() {\n  _s();\n  const [apps, setApps] = useState([]);\n  const [selectedApp, setSelectedApp] = useState(null);\n  const [configData, setConfigData] = useState({\n    columns: [],\n    rows: []\n  });\n  const [selectedTab, setSelectedTab] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    loadApplications();\n  }, []);\n  const loadApplications = async () => {\n    try {\n      const {\n        data\n      } = await getApplications();\n      setApps(data);\n    } catch (err) {\n      console.error('Fehler beim Laden der Anwendungen:', err);\n    }\n  };\n  const handleAppClick = async app => {\n    setSelectedApp(app);\n    setLoading(true);\n    setSelectedTab(null);\n    try {\n      const response = await getAppConfig(app.key);\n      const {\n        columns,\n        rows\n      } = response.data;\n      setConfigData({\n        columns,\n        rows\n      });\n\n      // Optional: Erste config_key als Tab auswählen (falls vorhanden)\n      const keys = rows.map(r => r.config_key).filter(Boolean);\n      if (keys.length > 0) {\n        setSelectedTab(keys[0]);\n      }\n    } catch (err) {\n      console.error('Fehler beim Laden der Konfiguration:', err);\n      setConfigData({\n        columns: [],\n        rows: []\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"applications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Anwendungen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), apps.map(app => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `app-btn ${(selectedApp === null || selectedApp === void 0 ? void 0 : selectedApp.key) === app.key ? 'active' : ''}`,\n        onClick: () => handleAppClick(app),\n        children: app.name\n      }, app.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Lade Konfiguration...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this), !loading && selectedApp && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [selectedApp.name, \" \\u2013 Konfiguration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tabs\",\n          children: [...new Set(configData.rows.map(row => row.config_key))].map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tab-btn ${selectedTab === key ? 'active' : ''}`,\n            onClick: () => setSelectedTab(key),\n            children: key\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"config-details\",\n          children: configData.rows.filter(row => row.config_key === selectedTab).map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"config-entry\",\n            children: [configData.columns.map(col => {\n              var _row$col;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [col, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 49\n                }, this), ' ', /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: String((_row$col = row[col]) !== null && _row$col !== void 0 ? _row$col : ''),\n                  onChange: e => {\n                    const newValue = e.target.value;\n                    setConfigData(prev => ({\n                      ...prev,\n                      rows: prev.rows.map(r => r.id === row.id ? {\n                        ...r,\n                        [col]: newValue\n                      } : r)\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 49\n                }, this)]\n              }, col, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 45\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(row),\n              children: \"Speichern\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 41\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Applications, \"3agoaxwdx1wgK2SC0s9nXupOWNE=\");\n_c = Applications;\nvar _c;\n$RefreshReg$(_c, \"Applications\");","map":{"version":3,"names":["React","useState","useEffect","getApplications","getAppConfig","jsxDEV","_jsxDEV","Fragment","_Fragment","Applications","_s","apps","setApps","selectedApp","setSelectedApp","configData","setConfigData","columns","rows","selectedTab","setSelectedTab","loading","setLoading","loadApplications","data","err","console","error","handleAppClick","app","response","key","keys","map","r","config_key","filter","Boolean","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","id","Set","row","col","_row$col","type","value","String","onChange","e","newValue","target","prev","handleSave","_c","$RefreshReg$"],"sources":["C:/Users/Daniel/Desktop/Applicationmanager/client/src/pages/Applications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getApplications, getAppConfig } from '../api';\r\nimport './Applications.css';\r\n\r\nexport default function Applications() {\r\n    const [apps, setApps] = useState([]);\r\n    const [selectedApp, setSelectedApp] = useState(null);\r\n    const [configData, setConfigData] = useState({ columns: [], rows: [] });\r\n    const [selectedTab, setSelectedTab] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        loadApplications();\r\n    }, []);\r\n\r\n    const loadApplications = async () => {\r\n        try {\r\n            const { data } = await getApplications();\r\n            setApps(data);\r\n        } catch (err) {\r\n            console.error('Fehler beim Laden der Anwendungen:', err);\r\n        }\r\n    };\r\n\r\n    const handleAppClick = async (app) => {\r\n        setSelectedApp(app);\r\n        setLoading(true);\r\n        setSelectedTab(null);\r\n        try {\r\n            const response = await getAppConfig(app.key);\r\n            const { columns, rows } = response.data;\r\n            setConfigData({ columns, rows });\r\n\r\n            // Optional: Erste config_key als Tab auswählen (falls vorhanden)\r\n            const keys = rows.map(r => r.config_key).filter(Boolean);\r\n            if (keys.length > 0) {\r\n                setSelectedTab(keys[0]);\r\n            }\r\n        } catch (err) {\r\n            console.error('Fehler beim Laden der Konfiguration:', err);\r\n            setConfigData({ columns: [], rows: [] });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"applications-container\">\r\n            <div className=\"sidebar\">\r\n                <h3>Anwendungen</h3>\r\n                {apps.map(app => (\r\n                    <button\r\n                        key={app.id}\r\n                        className={`app-btn ${selectedApp?.key === app.key ? 'active' : ''}`}\r\n                        onClick={() => handleAppClick(app)}\r\n                    >\r\n                        {app.name}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            <div className=\"main\">\r\n                {loading && <p>Lade Konfiguration...</p>}\r\n\r\n                {!loading && selectedApp && (\r\n                    <>\r\n                        <h2>{selectedApp.name} – Konfiguration</h2>\r\n                        <div className=\"tabs\">\r\n                            {[...new Set(configData.rows.map(row => row.config_key))].map(key => (\r\n                                <button\r\n                                    key={key}\r\n                                    className={`tab-btn ${selectedTab === key ? 'active' : ''}`}\r\n                                    onClick={() => setSelectedTab(key)}\r\n                                >\r\n                                    {key}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"config-details\">\r\n                            {configData.rows\r\n                                .filter(row => row.config_key === selectedTab)\r\n                                .map(row => (\r\n                                    <div key={row.id} className=\"config-entry\">\r\n                                        {configData.columns.map(col => (\r\n                                            <div key={col}>\r\n                                                <strong>{col}:</strong>{' '}\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    value={String(row[col] ?? '')}\r\n                                                    onChange={(e) => {\r\n                                                        const newValue = e.target.value;\r\n                                                        setConfigData(prev => ({\r\n                                                            ...prev,\r\n                                                            rows: prev.rows.map(r =>\r\n                                                                r.id === row.id\r\n                                                                    ? { ...r, [col]: newValue }\r\n                                                                    : r\r\n                                                            )\r\n                                                        }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                        ))}\r\n                                        <button onClick={() => handleSave(row)}>Speichern</button>\r\n                                    </div>\r\n                                ))}\r\n                        </div>\r\n\r\n\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}